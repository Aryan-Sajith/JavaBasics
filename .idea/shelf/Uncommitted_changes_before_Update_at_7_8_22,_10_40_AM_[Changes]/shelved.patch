Index: src/oop/inheritance/Rectangle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package oop.inheritance;\n\npublic class Rectangle extends Quadrilaterals {\n    public boolean allSidesEqual;\n    public Rectangle(double side1, double side2, double side3, double side4) {\n        super(side1, side2, side3, side4);\n        allSidesEqual = false;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/oop/inheritance/Rectangle.java b/src/oop/inheritance/Rectangle.java
--- a/src/oop/inheritance/Rectangle.java	(revision 0a8d84e1e97ac22c0b42a3894bc1d8d7e5de9c2a)
+++ b/src/oop/inheritance/Rectangle.java	(date 1657291120027)
@@ -1,9 +1,7 @@
 package oop.inheritance;
 
 public class Rectangle extends Quadrilaterals {
-    public boolean allSidesEqual;
-    public Rectangle(double side1, double side2, double side3, double side4) {
-        super(side1, side2, side3, side4);
-        allSidesEqual = false;
+    public Rectangle(double base, double height) {
+        super(base, height, base, height);
     }
 }
Index: src/oop/inheritance/Quadrilaterals.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package oop.inheritance;\n\npublic class Quadrilaterals {\n    double side1;\n    double side2;\n    double side3;\n    double side4;\n\n    public Quadrilaterals(double side1, double side2, double side3, double side4) {\n        this.side1 = side1;\n        this.side2 = side2;\n        this.side3 = side3;\n        this.side4 = side4;\n    }\n\n    public double Area() {\n        return side1*side2;\n    }\n    public double Perimeter() {return side1+side2+side3+side4;}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/oop/inheritance/Quadrilaterals.java b/src/oop/inheritance/Quadrilaterals.java
--- a/src/oop/inheritance/Quadrilaterals.java	(revision 0a8d84e1e97ac22c0b42a3894bc1d8d7e5de9c2a)
+++ b/src/oop/inheritance/Quadrilaterals.java	(date 1657291120012)
@@ -1,20 +1,26 @@
 package oop.inheritance;
 
 public class Quadrilaterals {
-    double side1;
-    double side2;
-    double side3;
-    double side4;
+    private double side1, side2, side3, side4;
+    private boolean allSidesEqual;
 
     public Quadrilaterals(double side1, double side2, double side3, double side4) {
         this.side1 = side1;
         this.side2 = side2;
         this.side3 = side3;
         this.side4 = side4;
+        allSidesEqual = false;
     }
 
     public double Area() {
         return side1*side2;
     }
     public double Perimeter() {return side1+side2+side3+side4;}
+
+    public boolean isAllSidesEqual() {
+        return allSidesEqual;
+    }
+    public void setAllSidesEqual(boolean allSidesEqual) {
+        this.allSidesEqual = allSidesEqual;
+    }
 }
Index: src/oop/inheritance/ShapesTester.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package oop.inheritance;\n\npublic class ShapesTester {\n    public static void main(String[] args) {\n        // inheritance= the process where one class acquires the methods and\n        // attributes of another class.\n        //\n        // parent/super class = the one that shares its methods/attributes\n        // child/subclass = the one that inherits properties using \"extends\"\n        // keyword.\n\n        Rectangle rectangle = new Rectangle(10,23,10,23);\n        System.out.println(rectangle.Perimeter());\n        System.out.println(rectangle.Area());\n        System.out.println(rectangle.allSidesEqual);\n        System.out.println();\n        Square square = new Square(23,23,23,23);\n        System.out.println(square.Perimeter());\n        System.out.println(square.Area());\n        System.out.println(square.allSidesEqual);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/oop/inheritance/ShapesTester.java b/src/oop/inheritance/ShapesTester.java
--- a/src/oop/inheritance/ShapesTester.java	(revision 0a8d84e1e97ac22c0b42a3894bc1d8d7e5de9c2a)
+++ b/src/oop/inheritance/ShapesTester.java	(date 1657291143535)
@@ -9,14 +9,14 @@
         // child/subclass = the one that inherits properties using "extends"
         // keyword.
 
-        Rectangle rectangle = new Rectangle(10,23,10,23);
+        Rectangle rectangle = new Rectangle(37,49);
         System.out.println(rectangle.Perimeter());
         System.out.println(rectangle.Area());
-        System.out.println(rectangle.allSidesEqual);
+        System.out.println(rectangle.isAllSidesEqual());
         System.out.println();
-        Square square = new Square(23,23,23,23);
+        Square square = new Square(69);
         System.out.println(square.Perimeter());
         System.out.println(square.Area());
-        System.out.println(square.allSidesEqual);
+        System.out.println(square.isAllSidesEqual());
     }
 }
Index: src/oop/inheritance/Square.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package oop.inheritance;\n\npublic class Square extends Rectangle{\n    public Square(double side1, double side2, double side3, double side4) {\n        super(side1, side2, side3, side4);\n        allSidesEqual = true;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/oop/inheritance/Square.java b/src/oop/inheritance/Square.java
--- a/src/oop/inheritance/Square.java	(revision 0a8d84e1e97ac22c0b42a3894bc1d8d7e5de9c2a)
+++ b/src/oop/inheritance/Square.java	(date 1657291120019)
@@ -1,8 +1,8 @@
 package oop.inheritance;
 
 public class Square extends Rectangle{
-    public Square(double side1, double side2, double side3, double side4) {
-        super(side1, side2, side3, side4);
-        allSidesEqual = true;
+    public Square(double sideLength) {
+        super(sideLength, sideLength);
+        setAllSidesEqual(true);
     }
 }
